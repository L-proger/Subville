@page 
@model Server.Pages.Subversion.RepositoriesModel
@{
    ViewData["Title"] = "Subversion repositories list";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div>
    <h1>@ViewData["Title"]</h1>

    <div class="d-flex py-3 border-bottom color-border-muted">
        <div class="flex-fill flex-column flex-lg-row flex-auto mb-1 mb-md-0 mr-md-3">
                <form class="width-full" data-autosearch-results-container="user-repositories-list" aria-label="Repositories" role="search" data-turbo="false" action="/L-proger" accept-charset="UTF-8" method="get">
                   
                <input type="search" id="repos-filter" name="q" class="form-control width-full" placeholder="Find a repository…" autocomplete="off" onkeyup="doSearch()" >
                </form>
            </div>


            <div class="d-flex flex-wrap">
                <div class="float-right">
                    <a asp-page="/Subversion/CreateRepository">
                        <button type="button" ID="Button1" class="btn  btn-success" title="Checkout" >
                            @Model.Icons.GetIconHtml("download-16")
                            New repository
                        </button>
                    </a>
                </div>
            </div>
        </div>
</div>

<div>


    <ul data-filterable-for="your-repos-filter" data-filterable-type="substring" style="margin-left:0px; padding-left:0px" id="new_repo_list">
        <li class="col-12 d-flex flex-justify-between width-full py-4 border-bottom color-border-muted">
            <div class="d-inline-block mb-1">
                <h3 class="wb-break-all" style="font-size: 20px;font-weight: 600;">
                    <a href="/L-proger/NffTestApp">NffTestApp</a>
                    <span></span>
                </h3>
            </div>
        </li>
    </ul>

    <ul style="display:none" id="repo_list_item_prototype">
        <li class="col-12 d-flex flex-justify-between width-full py-4 border-bottom color-border-muted">
            <div class="d-inline-block mb-1">
                <h3 class="wb-break-all" style="font-size: 20px;font-weight: 600;">
                    <a href="__REPO_URL">__REPO_NAME</a>
                    <span></span>
                </h3>
            </div>
        </li>
    </ul>

    <div>
        <ul class="pagination" id="pagination">

            
        </ul>
    </div>


</div>




@section scripts{
    <script>
        var activePage = 0;
        var pageSize = 3;

        function navigateToPage(id) {
            activePage = id
            console.log("navigateToPage ID: " + activePage)
            reloadRepositoriesList()
        }

     

        function updatePagination(response) {
            let fullHtml = ""


            if(response.page > 0)
            {
                fullHtml += "<li class=\"page-item\"><a class=\"page-link\" onclick = \"navigateToPage(0)\">First</a></li>"
                fullHtml += "<li class=\"page-item\"><a class=\"page-link\" onclick = \"navigateToPage(" + (response.page - 1) + ")\">Previous</a></li>"
            }


            for (let i = 0; i < response.pageCount; i++) {
                let activeFlag = null
                if (i == response.page) {
                    activeFlag = 'active'
                } else {
                    activeFlag = ''
                }

                fullHtml += '<li class="page-item '
                fullHtml += activeFlag
                fullHtml += "\" onclick = \"navigateToPage(" + i + ")\"><a class=\"page-link\">" + (i + 1) + "</a></li>"
            }


            if ((response.pageCount != 0) && (response.page < (response.pageCount - 1))) {
                fullHtml += "<li class=\"page-item\"><a class=\"page-link\" onclick = \"navigateToPage(" + (response.page + 1) + ")\">Next</a></li>"
                fullHtml += "<li class=\"page-item\"><a class=\"page-link\" onclick = \"navigateToPage(" + (response.pageCount - 1) + ")\">Last</a></li>"
            }

          

            document.getElementById('pagination').innerHTML = fullHtml

            console.log("updatePagination: " + JSON.stringify(response))
        }

        function reloadRepositoriesList() {
            console.log("RELOAD REPOSITORIES LIST! Page id: " + activePage)
            $.ajax({
                url: "@Url.Page("/Subversion/Repositories")?handler=RepositoriesList",
                method: "GET",
                data: { filter: document.getElementById('repos-filter').value,
                    pageIndex: activePage,
                    pageSize: pageSize 
                },
                
                success: function (response) {
                    var data = response.data
                    var template = document.getElementById('repo_list_item_prototype').innerHTML
                    document.getElementById('new_repo_list').innerHTML = ""
                    for (var i in data) {
                        document.getElementById('new_repo_list').innerHTML += template.replace('__REPO_NAME', data[i].name).replace("__REPO_URL", data[i].url)
                    }
                    console.log("AJAX DONE! Page count: " + response.pageCount)
                    updatePagination(response)
                }
            })
        }

        var delayTimer = null;
        function doSearch() {
            console.log("DELAYED SEARCH")
            if (delayTimer) {
                clearTimeout(delayTimer);
            }
            delayTimer = setTimeout(function () {
                console.log("DELAYED SEARCH RUN")
                navigateToPage(0)
            }, 500); 
        }

    </script>

    <script>
        $(document).ready(reloadRepositoriesList);
    </script>
}
