{
  "runtime": "NetCore31",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.3\r\ninfo:\r\n  title: subville\r\n  description: This is a Subville OpenAPI description created by l-proger (l-proger@yandex.ru)\r\n  license:\r\n    name: Apache 2.0\r\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\r\n  version: 1.0.0\r\nservers:\r\n- url: https://subville.com/api/v1\r\npaths:\r\n  /repository/:\r\n    get:\r\n      tags:\r\n      - repository\r\n      summary: List existing repositories\r\n      operationId: listRepositories\r\n      parameters:\r\n      - name: _limit\r\n        in: query\r\n        description: Max repositories in response\r\n        allowEmptyValue: false\r\n        schema:\r\n          type: integer\r\n      - name: _skip\r\n        in: query\r\n        description: Skip first N repositories\r\n        allowEmptyValue: false\r\n        schema:\r\n          type: integer\r\n      responses:\r\n        400:\r\n          $ref: '#/components/responses/RequestIssue'\r\n        401:\r\n          $ref: '#/components/responses/Unauthorized'\r\n        403:\r\n          $ref: '#/components/responses/OperationNotAllowed'\r\n        405:\r\n          $ref: '#/components/responses/HttpMethodNotSupported'\r\n        415:\r\n          $ref: '#/components/responses/UnsupportedFormat'\r\n        200:         \r\n          description: A list of repositories\r\n          content: \r\n            application/json: \r\n              schema: \r\n                $ref: '#/components/schemas/RepositoryDescriptionArray'\r\n      security:\r\n      - api_key: []\r\n\r\n  /repository/{id}:\r\n    get:\r\n      tags:\r\n      - repository\r\n      summary: Get single repository\r\n      operationId: getRepository\r\n      parameters:\r\n      - name: id\r\n        in: path\r\n        description: Repo id\r\n        allowEmptyValue: false\r\n        required: true\r\n        schema:\r\n          type: string\r\n      responses:\r\n        400:\r\n          $ref: '#/components/responses/RequestIssue'\r\n        401:\r\n          $ref: '#/components/responses/Unauthorized'\r\n        403:\r\n          $ref: '#/components/responses/OperationNotAllowed'\r\n        405:\r\n          $ref: '#/components/responses/HttpMethodNotSupported'\r\n        415:\r\n          $ref: '#/components/responses/UnsupportedFormat'\r\n        200:         \r\n          description: A list of repositories\r\n          content: \r\n            application/json: \r\n              schema: \r\n                $ref: '#/components/schemas/RepositoryDescription'\r\n      security:\r\n      - api_key: []\r\n  /token/:\r\n    post:\r\n      tags:\r\n      - token\r\n      summary: Login user and return token\r\n      operationId: getToken\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/LoginRequest'\r\n      responses:\r\n        400:\r\n          $ref: '#/components/responses/RequestIssue'\r\n        401:\r\n          $ref: '#/components/responses/Unauthorized'\r\n        403:\r\n          $ref: '#/components/responses/OperationNotAllowed'\r\n        405:\r\n          $ref: '#/components/responses/HttpMethodNotSupported'\r\n        415:\r\n          $ref: '#/components/responses/UnsupportedFormat'\r\n        200:         \r\n          description: Auth token\r\n          content: \r\n            application/json: \r\n              schema: \r\n                $ref: '#/components/schemas/TokenResponse'\r\n      security:\r\n      - api_key: []\r\ncomponents:\r\n  responses:\r\n    RequestIssue:\r\n      description: Issue with the request\r\n      content: {}\r\n    Unauthorized:\r\n      description: Request needs to be authenticated\r\n      content: {}\r\n    OperationNotAllowed:\r\n      description: Operation not allowed\r\n      content: {}\r\n    HttpMethodNotSupported:\r\n      description: HTTP method not supported\r\n      content: {}\r\n    UnsupportedFormat:\r\n      description: Request used an unsupported format\r\n      content: {}\r\n  schemas:\r\n    LoginRequest:\r\n      type: object\r\n      properties:\r\n        password:\r\n          type: string\r\n        user_name:\r\n          type: string\r\n    TokenResponse:\r\n      type: object\r\n      properties:\r\n        token:\r\n          type: string\r\n        user_name:\r\n          type: string\r\n    RepositoryDescription:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        url:\r\n          type: string\r\n      \r\n    RepositoryDescriptionArray:\r\n      type: object\r\n      properties:\r\n        has_more:\r\n          type: boolean\r\n        total_results:\r\n          type: integer\r\n        data:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/RepositoryDescription'\r\n  securitySchemes:\r\n    api_key:\r\n      type: http\r\n      scheme: basic\r\n",
      "url": "http://redocly.github.io/redoc/openapi.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpController": {
      "controllerBaseClass": "Microsoft.AspNetCore.Mvc.Controller",
      "controllerStyle": "Partial",
      "controllerTarget": "AspNetCore",
      "useCancellationToken": false,
      "useActionResultType": true,
      "generateModelValidationAttributes": false,
      "routeNamingStrategy": "None",
      "basePath": null,
      "className": "SubvilleApi{controller}",
      "operationGenerationMode": "MultipleClientsFromFirstTagAndPathSegments",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": true,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Server",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.List",
      "arrayInstanceType": "System.Collections.Generic.List",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../Server/Controllers/SubvilleApiController.cs",
      "newLineBehavior": "Auto"
    }
  }
}